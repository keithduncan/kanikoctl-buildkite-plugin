#!/bin/bash

set -o pipefail

echo "^^^ +++"

args=()

args+=( "exec" "executor" "--force" "--context=$BUILDKITE_BUILD_CHECKOUT_PATH/$BUILDKITE_PLUGIN_KANIKOCTL_CONTEXT_PATH" )

if [ -n "$BUILDKITE_PLUGIN_KANIKOCTL_DOCKERFILE" ]
then
	args+=( "--dockerfile=$BUILDKITE_PLUGIN_KANIKOCTL_DOCKERFILE" )
fi

# <...|info|debug|trace> see https://github.com/GoogleContainerTools/kaniko#--verbosity
if [ -n "$BUILDKITE_PLUGIN_KANIKOCTL_VERBOSITY" ]
then
	args+=( "--verbosity=$BUILDKITE_PLUGIN_KANIKOCTL_VERBOSITY" )
fi

# Copied from https://github.com/buildkite-plugins/docker-buildkite-plugin/blob/master/hooks/command
#
# Reads a list from plugin config into a global result array
# Returns success if values were read
plugin_read_list_into_result() {
  result=()

  for prefix in "$@" ; do
    local i=0
    local parameter="${prefix}_${i}"

    if [[ -n "${!prefix:-}" ]] ; then
      echo "ðŸš¨ Plugin received a string for $prefix, expected an array" >&2
      exit 1
    fi

    while [[ -n "${!parameter:-}" ]]; do
      result+=("${!parameter}")
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  done

  [[ ${#result[@]} -gt 0 ]] || return 1
}

if plugin_read_list_into_result BUILDKITE_PLUGIN_KANIKOCTL_BUILD_ARGS
then
  for build_arg in "${result[@]}"
  do
  	args+=( "--build-arg" "${build_arg}" )
  done
fi

if [ -n "$BUILDKITE_PLUGIN_KANIKOCTL_DESTINATION" ]
then
	if plugin_read_list_into_result BUILDKITE_PLUGIN_KANIKOCTL_TAGS
	then
		# Tags is a list of string literal
		for tag in "${result[@]}"
		do
			args+=( "--destination" "$BUILDKITE_PLUGIN_KANIKOCTL_DESTINATION:$tag" )
		done
	elif [ -n "$BUILDKITE_PLUGIN_KANIKOCTL_TAGS_REF" ]
	then
		# Tags is a ref to a buildkite-agent meta-data key of comma separated tags
		tags="$(buildkite-agent meta-data get "$BUILDKITE_PLUGIN_KANIKOCTL_TAGS_REF")"
		for tag in ${tags//,/ }
		do
			args+=( "--destination" "$BUILDKITE_PLUGIN_KANIKOCTL_DESTINATION:$tag" )
		done
	else
		args+=( "--destination" "$BUILDKITE_PLUGIN_KANIKOCTL_DESTINATION:latest" )
	fi
else
	args+=( "--no-push" )
fi

if [ ! -S "$KANIKO_SOCKET" ]
then
	echo >&2 "the KANIKO_SOCKET environment variable is not a socket"
	exit 1
fi

echo >&2 "${args[@]}"

echo "${args[@]}" | socat STDIO,ignoreeof unix-connect:$KANIKO_SOCKET
